{
	"info": {
		"_postman_id": "75c869a7-e498-4ec2-accc-7a6142aebbe2",
		"name": "API Sample",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3581761"
	},
	"item": [
		{
			"name": "auth/token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Assuming the token is in the response body",
							"const jsonData = pm.response.json();",
							"pm.environment.set(\"authToken\", jsonData.token);",
							"",
							"// Test for status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Test for response time",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"// Test for content-type header",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"// Test for the presence of token in the response body",
							"pm.test(\"Response body contains token\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"token\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\":\"testuser\", \"password\":\"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "ListUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Test for response time",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"// Test for content-type header",
							"pm.test(\"Content-Type is present and is application/json\", () => {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"// Test for response body not to be empty",
							"pm.test(\"Response body is not empty\", () => {",
							"    pm.expect(pm.response.json()).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}",
						"type": "text"
					},
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/admin/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "hello",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Basic tests for the API response",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Response has Content-Type header\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"// Additional test to check if the response body is not empty",
							"pm.test(\"Response body is not empty\", function () {",
							"    pm.expect(pm.response.text()).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{authToken}}",
						"type": "text"
					},
					{
						"key": "x-api-key",
						"value": "{{api_key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/hello",
					"host": [
						"{{url}}"
					],
					"path": [
						"hello"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "url",
			"value": "",
			"type": "string"
		}
	]
}